ai-gemini-review:
  stage: ai_review
  tags: [ai]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  before_script:
    # Ensure Homebrew/Node available for shell runner on macOS
    - export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"
    - command -v npm || ( brew update && brew install node )
    - npm --version
    - npm install -g @google/gemini-cli

    - mkdir -p "$CI_PROJECT_DIR/bin" "$HOME/.gemini"
    - export GITLAB_MCP_VERSION="1.29.0"
    # ✅ Correct binary for macOS Apple Silicon
    - curl -sSL -o "$CI_PROJECT_DIR/bin/mcp.tgz" \
        "https://gitlab.com/fforster/gitlab-mcp/-/releases/v${GITLAB_MCP_VERSION}/downloads/gitlab-mcp_${GITLAB_MCP_VERSION}_Darwin_arm64.tar.gz"
    - tar -xzf "$CI_PROJECT_DIR/bin/mcp.tgz" -C "$CI_PROJECT_DIR/bin"
    - chmod +x "$CI_PROJECT_DIR/bin/gitlab-mcp"

    # Minimal settings with MCP + bot token
    - |
      cat > "$HOME/.gemini/settings.json" <<'JSON'
      {
        "coreTools": ["LSTool","ReadFileTool","GrepTool","GlobTool","ReadManyFilesTool"],
        "mcpServers": {
          "gitlab": {
            "command": "${CI_PROJECT_DIR}/bin/gitlab-mcp",
            "env": { "GITLAB_TOKEN": "${GITLAB_REVIEW_PAT}" },
            "timeout": 5000,
            "includeTools": [
              "get_merge_request","get_merge_request_changes","get_merge_request_commits",
              "discussion_add_note","discussion_list"
            ]
          }
        }
      }
      JSON

    # (Optional) sanity check that key is injected (prints only length)
    - test -n "$GEMINI_API_KEY" || (echo "GEMINI_API_KEY missing"; exit 1)
    - echo "GEMINI_API_KEY present (len=$(echo -n "$GEMINI_API_KEY" | wc -c))"
  script:
    - echo "AI review for MR !${CI_MERGE_REQUEST_IID} in ${CI_PROJECT_PATH}"
    - |
      gemini --yolo <<'PROMPT'
      You are a senior reviewer for a Unity/C# project.
      1) Use GitLab MCP tools to read THIS MR’s changes and intent.
      2) Post ONE concise summary comment with top risks.
      3) Post ONE suggestions comment with safe GitLab suggestions.
      PROMPT
  allow_failure: true
  artifacts:
    when: always
    paths: [ai_review_report.md]