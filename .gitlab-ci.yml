stages:
  - review

gemini_cli_code_review:
  stage: review
  image: node:20-alpine
  before_script:
    - set -euo pipefail
    - echo "Installing system deps…"
    - apk add --no-cache bash ca-certificates curl
    - echo "Installing Gemini CLI…"
    - npm install -g @google/gemini-cli@latest
    - gemini --version
    - echo "Installing MCP server dependencies…"
    - npm install --omit=dev
    - node -e "require('@modelcontextprotocol/sdk'); console.log('MCP SDK OK')"
  script:
    - echo "Starting the Gemini CLI job..."
    - |
      if [ -z "${GEMINI_API_KEY:-}" ]; then
        echo "Error: 'GEMINI_API_KEY' is not set." >&2
        exit 1
      fi
      if [ -z "${GITLAB_REVIEW_PAT:-}" ]; then
        echo "Error: 'GITLAB_REVIEW_PAT' is not set." >&2
        exit 1
      fi
      if [ -z "${CI_MERGE_REQUEST_IID:-}" ]; then
        echo "Error: This job must run on merge_request_event (no MR IID)." >&2
        exit 1
      fi
    - |
      set -euo pipefail
      echo "Verifying Gemini CLI availability…"
      if ! command -v gemini >/dev/null 2>&1; then
        echo "Gemini CLI not found in PATH. Ensure your runner image provides 'gemini'." >&2
        exit 1
      fi
      gemini --version || true
    - |
      echo "Writing Gemini CLI settings for in-repo GitLab MCP…"
      mkdir -p "$HOME/.gemini"
      cat > "$HOME/.gemini/settings.json" <<EOF
      {
        "mcpServers": {
          "gitlab": {
            "command": "node",
            "args": ["${CI_PROJECT_DIR}/gitlab-mcp-server.js"],
            "env": {
              "GITLAB_PERSONAL_ACCESS_TOKEN": "${GITLAB_REVIEW_PAT}",
              "GITLAB_API_URL": "https://hs2git.ab-games.com/api/v4",
              "GITLAB_TOKEN_HEADER": "PRIVATE-TOKEN"
            },
            "timeout": 10000,
            "includeTools": [
              "discussion_add_note",
              "discussion_list",
              "get_merge_request_changes",
              "get_merge_request_commits",
              "get_merge_request_participants",
              "get_merge_request",
              "list_merge_request_diffs",
              "list_merge_requests",
              "get_file_contents",
              "create_or_update_file"
            ]
          }
        }
      }
      EOF
    - |
      echo "Performing Code Review with Gemini"
      gemini --debug --yolo <<EOF
        You are an automated code review assistant for GitLab.
        Target project: ${CI_MERGE_REQUEST_PROJECT_URL}
        Target MR IID: ${CI_MERGE_REQUEST_IID}

        Goals:
        - Retrieve MR details, commits, and changes using available GitLab MCP tools.
        - Post a concise summary comment to the MR with key findings.
        - Post a prioritized list of suggestions, quoting current code when relevant.
        - If no issues are found, post a short LGTM comment with rationale.
      EOF

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
